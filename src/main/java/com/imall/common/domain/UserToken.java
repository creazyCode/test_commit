package com.imall.common.domain;

import com.imall.common.utils.CommonConstants;
import com.imall.common.utils.ObjectUtils;
import com.imall.common.utils.encrypt.AppEncryptUtils;
import org.apache.commons.lang.StringUtils;

import java.sql.Timestamp;

@com.fasterxml.jackson.databind.annotation.JsonSerialize(include=com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion.NON_NULL)
public class UserToken extends BasicDomain {
    /**
	 * 
	 */
	private static final long serialVersionUID = 2765956179146091624L;

    private Long userId;
    private String token;
    private String etoken;//AES加密的token
    private String encryptedAESKey;//对称加密以后的AES密码
    private Timestamp tokenValidToTime;
    private String sessionId;
    private Timestamp sessionIdValidToTime;
    private String wechatAppSessionKey;
    private Timestamp wechatAppSessionKeyValidToTime;
    
    private Timestamp loginTime;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column u_user_token.user_id
     *
     * @return the value of u_user_token.user_id
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public Long getUserId() {
        return userId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column u_user_token.user_id
     *
     * @param userId the value for u_user_token.user_id
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column u_user_token.token
     *
     * @return the value of u_user_token.token
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public String getToken() {
        return token;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column u_user_token.token_valid_to_time
     *
     * @return the value of u_user_token.token_valid_to_time
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public Timestamp getTokenValidToTime() {
        return tokenValidToTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column u_user_token.token_valid_to_time
     *
     * @param tokenValidToTime the value for u_user_token.token_valid_to_time
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public void setTokenValidToTime(Timestamp tokenValidToTime) {
        this.tokenValidToTime = tokenValidToTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column u_user_token.session_id
     *
     * @return the value of u_user_token.session_id
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public String getSessionId() {
        return sessionId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column u_user_token.session_id
     *
     * @param sessionId the value for u_user_token.session_id
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public void setSessionId(String sessionId) {
        this.sessionId = sessionId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column u_user_token.session_id_valid_to_time
     *
     * @return the value of u_user_token.session_id_valid_to_time
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public Timestamp getSessionIdValidToTime() {
        return sessionIdValidToTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column u_user_token.session_id_valid_to_time
     *
     * @param sessionIdValidToTime the value for u_user_token.session_id_valid_to_time
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public void setSessionIdValidToTime(Timestamp sessionIdValidToTime) {
        this.sessionIdValidToTime = sessionIdValidToTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column u_user_token.wechat_app_session_key
     *
     * @return the value of u_user_token.wechat_app_session_key
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public String getWechatAppSessionKey() {
        return wechatAppSessionKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column u_user_token.wechat_app_session_key
     *
     * @param wechatAppSessionKey the value for u_user_token.wechat_app_session_key
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public void setWechatAppSessionKey(String wechatAppSessionKey) {
        this.wechatAppSessionKey = wechatAppSessionKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column u_user_token.wechat_app_session_key_valid_to_time
     *
     * @return the value of u_user_token.wechat_app_session_key_valid_to_time
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public Timestamp getWechatAppSessionKeyValidToTime() {
        return wechatAppSessionKeyValidToTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column u_user_token.wechat_app_session_key_valid_to_time
     *
     * @param wechatAppSessionKeyValidToTime the value for u_user_token.wechat_app_session_key_valid_to_time
     *
     * @mbggenerated Tue Jan 17 13:48:59 CST 2017
     */
    public void setWechatAppSessionKeyValidToTime(Timestamp wechatAppSessionKeyValidToTime) {
        this.wechatAppSessionKeyValidToTime = wechatAppSessionKeyValidToTime;
    }
    
    public boolean checkTokenExpired(){
    	if((this.getTokenValidToTime() != null 
    			&& this.getTokenValidToTime().getTime() < System.currentTimeMillis()) 
    			|| StringUtils.isBlank(this.getToken())
    			|| StringUtils.isBlank(this.getEtoken())){
    		return true;
    	}
    	return false;
    }
    
    public boolean regenerateToken(IUser user, String password, String encryptedAESKey){
    	boolean regenerated = false;
    	if(this.checkTokenExpired()){
    		this.token = ObjectUtils.encodeToken(user.getUid(), password, System.currentTimeMillis());
    		this.setTokenValidToTime(new Timestamp(System.currentTimeMillis() + CommonConstants.TOKEN_EXPIRES_IN));
    		regenerated = true;
    	}
		if(!StringUtils.isBlank(this.token) && !StringUtils.isBlank(encryptedAESKey)){
			this.setEncryptedAESKey(encryptedAESKey);
			this.etoken = AppEncryptUtils.encryptByAES(this.token, AppEncryptUtils.decryptByRSA(encryptedAESKey));
			regenerated = true;
		}
		return regenerated;
    }

	public String getEtoken() {
		return etoken;
	}

	public String getEncryptedAESKey() {
		return encryptedAESKey;
	}

	public void setEncryptedAESKey(String encryptedAESKey) {
		this.encryptedAESKey = encryptedAESKey;
	}

	public Timestamp getLoginTime() {
		return loginTime;
	}

	public void setLoginTime(Timestamp loginTime) {
		this.loginTime = loginTime;
	}
}